OOP -> Object Oriented Programming

    1) Object -> class'dan new ConstructorName'ni chaqirib olingan namuna
         hisoblanadi. Class logic hisoblansa, Object physic hisoblanadi,
         va bu heap hotirada saqlanadi.

    2) Class -> bu object uchun shablon hisoblanadi, undan object olinguniga
         qadar hotiradan hech qanday joy egallamaydi. Class'da bo'ladi:
             1) Fields
             2) Methods
             3) Constructors

    3) Inheritance -> vorislik Ota class'dagi ruhsat berilgan field'larni,
         constructor'larni va method'larni voris class'ga o'tishi
         inheritance deyiladi.

    4) Polymorphism -> nomi bir xil va parameterlari har hil metodlar bo'lishi
         bu polymorphism. Uning turlari:
             1) Run-time polymorphism(Overriding) - bu subclass yani vorislikda
                 ota (class, interface)'ni methodlarini qaytadan yozish bunda
                 super'dagi method ni o'zini ham qo'shib olsa bo'ladi. super'dagi
                 method bilan subclass'dagi methodni name va parameterlari bir xil
                 bo'lishi shart
             2) Compile-time polymorphism(Overloading) - bitta class'ni ichida
                 nomi bir-xil ammo parameterlari bilan farq qiladi.

    5) Abstraction -> mavhumlik misol uchun ma'lum bir methodlarni o'zi bor ammo
        tanasi yo'q yani tana mavhum qanday ishlashi ma'lum emas. Java'da abstraction'ga
        erishish uchun quyidagilardan foydalanamiz:
             1) interface - interface'da abstract method bo'ladi yani tanasi bo'lmaydi.
                Field'lar esa public static final-yani constanta boladi. Tanasi bilan private,
                default method bo'lishi mumkin va yana static method ham bo'lishi mumkin tanasi bilan.
             2) abstract class - abstract class'da esa ham abstract method'lar ham abstract bo'lmagan
                method'lar bo'lishi mumkin. Undan tashqari hohlagan turdagi field'larni yoza olamiz.

    6) Encapsulation -> qobiqqa o'rash yani himoyalash. Bunga access modifiers bilan erishamiz.
         Access Modifiers:
             1) public - hamma joydan murojaat qilsa bo'ladi
             2) protected - class'ni ichida, package ichida, bitta package ichida va tashqarisida
                subclass'da murojaat qilsa bo'ladi
             3) default - class'ni ichida, package ichida va bitta package ichida subclass'da
             4) private - faqat class'ni ichida murojaat qilsa bo'ladi